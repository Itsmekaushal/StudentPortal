server.js
import express from "express";
import cors from "cors";
import uploadRoutes from "./routes/uploadRoutes.js";

const app = express();

// Middleware
app.use(cors());
app.use(express.json());
app.use("/uploads", express.static("uploads")); // Serve uploaded files

// Routes
app.use("/api/upload", uploadRoutes);

const PORT = 5000;
app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});






uploadRoutes.js

import express from "express";
import { uploadFile } from "../controllers/uploadController.js";

const router = express.Router();

// Upload Route
router.post("/", uploadFile);

export default router;

uploadControllers.js

import multer from "multer";
import path from "path";
import { fileURLToPath } from "url";

// Fix __dirname in ES module
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Set Storage Engine
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    cb(null, path.join(__dirname, "../uploads/"));
  },
  filename: (req, file, cb) => {
    cb(null, `${Date.now()}-${file.originalname}`);
  },
});

// File Filter
const fileFilter = (req, file, cb) => {
  const allowedTypes = ["image/jpeg", "image/png", "image/jpg", "application/pdf"];
  if (allowedTypes.includes(file.mimetype)) {
    cb(null, true);
  } else {
    cb(new Error("Invalid file type. Only images and PDFs are allowed."), false);
  }
};

const upload = multer({ storage, fileFilter });

// Controller Function
export const uploadFile = (req, res) => {
  upload.single("profileImage")(req, res, (err) => {
    if (err) {
      return res.status(400).json({ error: err.message });
    }
    res.json({ imageUrl: `/uploads/${req.file.filename}` });
  });
}

export const config = {
  PORT: 5000,
  UPLOAD_DIR: "uploads",
  ALLOWED_FILE_TYPES: ["image/jpeg", "image/png", "image/jpg", "application/pdf"],
};

